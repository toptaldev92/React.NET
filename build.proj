<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2014-Present, Facebook, Inc.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree. An additional grant
of patent rights can be found in the PATENTS file in the same directory.
-->
<Project ToolsVersion="4.0" DefaultTargets="Build;Test;Package" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<Major>2</Major>
		<Minor>5</Minor>
		<Build>0</Build>
		<Revision>0</Revision>
		<DevNuGetServer>http://reactjs.net/packages/</DevNuGetServer>
		<MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\tools\MSBuildTasks</MSBuildCommunityTasksPath>
		<PackageOutputDir>output</PackageOutputDir>
		<BuildType Condition="'$(BuildType)' == ''">Dev</BuildType>
		
		<SolutionFile>src\React.sln</SolutionFile>
	</PropertyGroup>
	<ItemGroup>
		<PackageAssemblies Include="React.Core" />
		<PackageAssemblies Include="React.Web" />
		<PackageAssemblies Include="React.Web.Mvc4" />
		<PackageAssemblies Include="System.Web.Optimization.React" />
		<PackageAssemblies Include="Cassette.React" />
		<PackageAssemblies Include="React.MSBuild" />
		<PackageAssemblies Include="React.Owin" />
		<PackageAssembliesAspNetCore Include="React.AspNet" />
		<AspNetCoreProjectJson Include="src/wrap/**/project.json" />
		<AspNetCoreProjectJson Include="src/React.AspNet/project.json" />
		<AspNetCoreProjectJson Include="src/React.Sample.Mvc6/project.json" />
	</ItemGroup>

	<Import Project="src/React.tasks.proj" />
	
	<Target Name="RestorePackages" DependsOnTargets="Clean">
		<Exec
			WorkingDirectory="$(MSBuildProjectDirectory)"
			Command="tools\NuGet\nuget.exe restore $(SolutionFile)"
		/>
		<!-- NuGet packages for ASP.NET Core projects -->
		<Exec
			WorkingDirectory="$(MSBuildProjectDirectory)"
			Command="dotnet restore src\React.AspNet src\React.Sample.Mvc6"
		/>
		<!-- npm packages -->
		<Exec
			WorkingDirectory="src/React.Core"
			Command="npm install"
		/>
		<Exec
			WorkingDirectory="src/React.Sample.Webpack"
			Command="npm install"
		/>
	</Target>

	<Target Name="UpdateVersion">
		<GitVersion LocalPath="$(MSBuildProjectDirectory)">
			<Output TaskParameter="CommitHash" PropertyName="Revision" />
		</GitVersion>
		<Time Format="yyyyMMdd-HHmm">
			<Output TaskParameter="FormattedTime" PropertyName="Date" />
		</Time>
		<!-- Prepend date to build version if a dev build-->
		<PropertyGroup Condition="$(BuildType) == 'Release'">
			<FullBuild>$(Build)</FullBuild>
		</PropertyGroup>
		<PropertyGroup Condition="$(BuildType) != 'Release'">
			<FullBuild>$(Build)-dev-$(Date)</FullBuild>
		</PropertyGroup>
		<!-- Set version for .csproj projects -->
		<AssemblyInfo
			CodeLanguage="CS"
			OutputFile="src\SharedAssemblyVersionInfo.cs"
			AssemblyVersion="$(Major).$(Minor)"
			AssemblyFileVersion="$(Major).$(Minor).$(FullBuild).$(Revision)"
			AssemblyInformationalVersion="$(Major).$(Minor).$(FullBuild)"
		/>
		<!-- 
			Set version for ASP.NET Core projects. In theory K_BUILD_VERSION should work but it doesn't seem 
			to be functional yet :(. We work around this by physically writing the build number to the 
			project.json files. For development builds we write the full version number (including 
			build date) and reset it later so the dev build number isn't commited to the repo.
		-->
		<!--SetEnvironmentVariable
			Name="K_BUILD_VERSION"
			Value="$(Build)"
		/-->
		<UpdateAspNetProjectVersion
			Files="@(AspNetCoreProjectJson)"
			Version="$(Major).$(Minor).$(FullBuild)"
		/>
	</Target>

	<Target Name="Clean" BeforeTargets="Build">
		<!-- 
			ASP.NET Core projects don't delete generated .nupkg files when cleaned or rebuilt, so we need to
			do it here. See https://github.com/aspnet/XRE/issues/1301 
		-->
		<DeleteTree Directories="src/artifacts" />
		<DeleteTree Directories="bin/%(PackageAssembliesAspNetCore.Identity)/Release" />
	</Target>

	<Target Name="Build" DependsOnTargets="RestorePackages;UpdateVersion">
		<Exec WorkingDirectory="src/React.Core" Command="node_modules/.bin/gulp" />
		<MSBuild Projects="$(SolutionFile)" Targets="Rebuild" Properties="Configuration=Release;Platform=Any CPU;NoWarn=1607,7035" />
		<Exec WorkingDirectory="src/React.Sample.Webpack" Command="node_modules/.bin/webpack" />
	</Target>

	<Target Name="ResetAspNetVersion" AfterTargets="AspNetPackages">
		<!-- Resets the version number in ASP.NET Core project.json files so we don't commit -dev- version numbers -->
		<UpdateAspNetProjectVersion
			Files="@(AspNetCoreProjectJson)"
			Version="$(Major).$(Minor).$(Build)-*"
		/>
	</Target>

	<Target Name="Test" DependsOnTargets="Build">
		<ItemGroup>
			<TestAssemblies Include="bin/ReleaseTests/**/React.Tests*.dll" />
		</ItemGroup>
		<NUnit
			ToolPath="src\packages\NUnit.Runners.2.6.3\tools"
			Assemblies="@(TestAssemblies)"
		/>
	</Target>

	<Target Name="GenerateNuSpecs">
		<TransformXml
			Source="src/template.nuspec"
			Transform="src/%(PackageAssemblies.Identity)/%(PackageAssemblies.Identity).nutrans"
			Destination="src/%(PackageAssemblies.Identity)/%(PackageAssemblies.Identity).nuspec"
		/>
	</Target>

	<Target Name="Package" DependsOnTargets="Build;GenerateNuSpecs">
		<!-- Delete old packages -->
		<RemoveDir Directories="$(PackageOutputDir)" />

		<!-- Create new packages -->
		<MakeDir Directories="$(PackageOutputDir)" />
		<Exec
			WorkingDirectory="$(MSBuildProjectDirectory)"
			Command="tools\NuGet\nuget.exe pack src/%(PackageAssemblies.Identity)/%(PackageAssemblies.Identity).csproj -IncludeReferencedProjects -Symbols -Prop Configuration=Release -OutputDirectory output"
		/>
	</Target>
  
	<Target Name="AspNetPackages" AfterTargets="Package">
		<Exec
			WorkingDirectory="$(MSBuildProjectDirectory)"
			Command="dotnet pack --output $(PackageOutputDir) --build-base-path bin/ --configuration Release --no-build src/%(PackageAssembliesAspNetCore.Identity)/project.json"
		/>
	</Target>

	<Target Name="Push">
		<CallTarget Targets="PushDev" Condition="$(BuildType) != 'Release'" />
		<CallTarget Targets="PushRelease" Condition="$(BuildType) == 'Release'" />
	</Target>
	<Target Name="PushRelease">
		<ItemGroup>
			<PackageFiles Include="$(PackageOutputDir)\*.nupkg" Exclude="$(PackageOutputDir)\*.symbols.nupkg" />
		</ItemGroup>
		<Exec
			WorkingDirectory="$(MSBuildProjectDirectory)"
			Command="tools\NuGet\nuget.exe push %(PackageFiles.Identity) -NonInteractive"
		/>
	</Target>
	<Target Name="PushDev">
		<Exec
			WorkingDirectory="$(MSBuildProjectDirectory)"
			Command="tools\NuGet\nuget.exe push $(PackageOutputDir)\*.symbols.nupkg -Source $(DevNuGetServer) -NonInteractive"
		/>
	</Target>
</Project>
